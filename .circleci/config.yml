# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  setup:
    docker: &docker
      # specify the version you desire here
      - image: cimg/node:20.5
    resource_class: large
    steps:
      - checkout
      - run: npm pkg set 'workspaces[]'='examples/*'
      - restore_cache:
          keys:
            - v8-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "examples/github-app/package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v8-dependencies-
      - run:
          name: yarn install
          command: |
            sudo npm install -g corepack
            sudo corepack enable
            YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
      - save_cache:
          paths:
            - .yarn/cache
            - .yarn/install-state.gz
          key: v8-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "examples/github-app/package-lock.json" }}
      - run: yarn run ci:build:types
      - run: yarn run ci:build
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  lint:
    docker: *docker
    resource_class: medium+
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            yarn lint packages/*/src

  typecheck:
    docker: *docker
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            cd packages/endpoint
            yarn run typecheck

  unit_tests:
    parameters:
      react-version:
        type: string
    docker: *docker
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            if [ "<< parameters.react-version >>" != "^18" ]; then
            yarn add --dev react@<< parameters.react-version >> react-dom@<< parameters.react-version >> react-test-renderer@<< parameters.react-version >> @testing-library/react@^12.0.0 @testing-library/react-hooks
            yarn workspace @data-client/test add @testing-library/react@^12.0.0
            yarn workspace @rest-hooks/legacy add --dev react@<< parameters.react-version >> react-dom@<< parameters.react-version >> react-test-renderer@<< parameters.react-version >>
            yarn set resolution @testing-library/react@npm:^14.0.0 ^12.0.0 
            fi
      - run:
          command: |
            if [ "<< parameters.react-version >>" == "^17.0.0" ]; then
              curl -Os https://uploader.codecov.io/latest/linux/codecov;
              chmod +x codecov;
              yarn run test:coverage --ci --maxWorkers=3 --coverageReporters=text-lcov > ./lcov.info;
              if [ "$CODECOV_TOKEN" != "" ]; then
                ./codecov -t ${CODECOV_TOKEN} < ./lcov.info || true;
              else
                ./codecov < ./lcov.info || true;
              fi
            else
              yarn test:ci --maxWorkers=3 packages/react packages/redux packages/ssr packages/use-enhanced-reducer packages/img packages/legacy/src/__tests__/useStatefulResource.tsx packages/rest packages/hooks
            fi

  node_matrix:
    parameters:
      node-version:
        type: string
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            node --version
      - run:
          command: |
            yarn test:ci --maxWorkers=3 --selectProjects Node

  non-app-examples:
    docker: *docker
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            cd examples/normalizr-relationships
            yarn run start

  esmodule-types:
    parameters:
      typescript-version:
        type: string
    docker: *docker
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            if [ "<< parameters.typescript-version >>" != "latest" ]; then
            yarn add --dev typescript@<< parameters.typescript-version >>
            fi
      - run:
          name: typecheck
          command: |
            if [ "<< parameters.typescript-version >>" == "latest" ] || [ "<< parameters.typescript-version >>" == "~4.8" ]; then
            yarn run tsc --project examples/todo-app/tsconfig.json
            yarn run tsc --project examples/github-app/tsconfig.json
            fi
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json
            yarn run tsc --project examples/github-app/tsconfig.typetest.json
            if [ "<< parameters.typescript-version >>" != "~4.0" ]; then
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json
            fi

  esmodule-loosenulltypes:
    docker: *docker
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: typecheck
          command: |
            yarn run tsc --project examples/todo-app/tsconfig.json --strictNullChecks false
            yarn run tsc --project examples/github-app/tsconfig.json --strictNullChecks false
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json --strictNullChecks false
            yarn run tsc --project examples/github-app/tsconfig.typetest.json --strictNullChecks false
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json --strictNullChecks false

  esmodule-exactOptionalPropertyTypes:
    docker: *docker
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: typecheck
          command: |
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json --exactOptionalPropertyTypes true
            yarn run tsc --project examples/github-app/tsconfig.typetest.json --exactOptionalPropertyTypes true
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json --exactOptionalPropertyTypes true

  validate-esmodule-browser-build:
    docker: *docker
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            cd examples/todo-app
            npm run build:browser -- --env readable

workflows:
  version: 2
  all-tests:
    jobs:
      - setup
      - unit_tests:
          matrix:
            parameters:
              react-version: ["^17.0.0", "^18"]
          requires:
            - setup
      - node_matrix:
          matrix:
            parameters:
              node-version: ["14.21", "16.19"]
          requires:
            - setup
      - lint:
          requires:
            - setup
      - typecheck:
          requires:
            - setup
      - non-app-examples:
          requires:
            - setup
      - validate-esmodule-browser-build:
          requires:
            - setup
      - esmodule-types:
          matrix:
            parameters:
              # 3.7 is min version for 'full enforcement' (TODO: we need to do a test without rest lib for this to work)
              # 4.0 is min version for rest package working
              # 4.1 is min version for rest package working well
              # 4.3
              # 4.7 (but its broken so we do 4.8) lets you apply a generic type to a function type to see its return value
              typescript-version: ["~4.0", "~4.1", "~4.3", "~4.8", "latest"]
          requires:
            - setup
      - esmodule-loosenulltypes:
          requires:
            - setup
      - esmodule-exactOptionalPropertyTypes:
          requires:
            - setup
