# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
executors:
  node:
    docker: &docker
      - image: cimg/node:22.12
    environment:
      # the whole CI is reset each time anyway, so only track local cache
      YARN_ENABLE_GLOBAL_CACHE: false
      YARN_ENABLE_MIRROR: false

      # Don't waste io
      YARN_ENABLE_PROGRESS_BARS: false
      YARN_ENABLE_INLINE_BUILDS: true
      # Don't revalidate
      YARN_ENABLE_SCRIPTS: false
      # Keep install cache
      YARN_ENABLE_IMMUTABLE_INSTALLS: true

jobs:
  setup:
    executor: node
    resource_class: large
    steps:
      - checkout:
          depth: 1
      - run:
          name: Add examples/* to yarn workspace
          command: |
            npm pkg set 'workspaces[]'='examples/*'
      - restore_cache:
          keys:
            - v13-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "examples/github-app/package.json" }}-{{ checksum "examples/todo-app/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v13-dependencies-
      - run:
          name: yarn install
          command: |
            yarn up @data-client/endpoint@workspace:^ @data-client/react@workspace:^ @data-client/rest@workspace:^
      - save_cache:
          paths:
            - .yarn/cache
            - .yarn/install-state.gz
          key: v13-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "examples/github-app/package.json" }}-{{ checksum "examples/todo-app/package.json" }}
      - run: yarn run ci:build:types
      - run: yarn run ci:build-test-lib
      - persist_to_workspace:
          root: ~/
          paths:
            # explicitly list so we can ignore some directories that are not needed
            - project/.yarn
            - project/__tests__
            - project/examples
            - project/node_modules
            - project/packages
            - project/scripts
            - project/.yarnrc.yml
            - project/babel.config.js
            - project/eslint.config.mjs
            - project/jest.config.js
            - project/package.json
            - project/tsconfig-base.json
            - project/tsconfig.json
            - project/tsconfig.test.json
            - project/yarn.lock

  lint:
    executor: node
    resource_class: medium
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            yarn lint --quiet packages/*/src

  typecheck:
    executor: node
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            yarn workspaces foreach -A --include @data-client/endpoint --include @data-client/rest run typecheck

  unit_tests:
    parameters:
      react-version:
        type: string
    executor: node
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Installing React Version
          command: |
            if [ "<< parameters.react-version >>" == "^17.0.0" ]; then
            yarn up react@<< parameters.react-version >> react-dom@<< parameters.react-version >> react-test-renderer@<< parameters.react-version >> @react-navigation/native@^6.0.0 @react-navigation/native-stack@^6.0.0 react-native-screens@^3.0.0 @testing-library/react@^12.0.0
            yarn add --dev @testing-library/react-hooks 
            elif [ "<< parameters.react-version >>" == "^18" ]; then
            yarn up react@<< parameters.react-version >> react-dom@<< parameters.react-version >> react-test-renderer@<< parameters.react-version >>
            fi
      - run:
          name: Running Jest
          command: |
            if [ "<< parameters.react-version >>" == "^17.0.0" ]; then
              ANANSI_JEST_TYPECHECK=false yarn test:ci --maxWorkers=3 --selectProjects ReactDOM ReactNative --testPathPattern packages/react packages/use-enhanced-reducer packages/img
            elif [ "<< parameters.react-version >>" == "^18" ]; then
              curl -Os https://uploader.codecov.io/latest/linux/codecov;
              chmod +x codecov;
              yarn run test:coverage --ci --maxWorkers=3 --coverageReporters=text-lcov > ./lcov.info;
              if [ "$CODECOV_TOKEN" != "" ]; then
                ./codecov -t ${CODECOV_TOKEN} < ./lcov.info || true;
              else
                ./codecov < ./lcov.info || true;
              fi
            else
              yarn test:ci --maxWorkers=4 --selectProjects Node ReactDOM --testPathPattern packages/react packages/use-enhanced-reducer packages/img
            fi

  node_matrix:
    parameters:
      node-version:
        type: string
    executor: node
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - attach_workspace:
          at: ~/
      - run:
          command: |
            node --version
      - run:
          # we must use npm because yarn 4 isn't compatible with legacy node versions
          command: |
            ANANSI_JEST_TYPECHECK=false npm test --ci --maxWorkers=2 --selectProjects Node

  setup-esmodule-types:
    executor: node
    resource_class: large
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build Legacy Types
          command: yarn run ci:build:legacy-types
      - persist_to_workspace:
          root: ~/
          paths:
            # explicitly list so we can ignore some directories that are not needed
            - project/packages/*/ts*

  esmodule-types:
    parameters:
      typescript-version:
        type: string
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install TypeScript Version
          command: |
            yarn up typescript@~<< parameters.typescript-version >>
            if [[ "<< parameters.typescript-version >>" == "4.0" || \
            "<< parameters.typescript-version >>" == "4.1" || \
            "<< parameters.typescript-version >>" == "4.3" ]]; then
              yarn up @types/react@ts<< parameters.typescript-version >>
            fi
      - run:
          name: Run Typecheck
          command: |
            if [ "<< parameters.typescript-version >>" == "5.3" ] || [ "<< parameters.typescript-version >>" == "4.8" ]; then
            yarn run tsc --project examples/todo-app/tsconfig.json
            yarn run tsc --project examples/github-app/tsconfig.json
            fi
            if [ "<< parameters.typescript-version >>" != "4.0" ]; then
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json
            fi
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json
            yarn run tsc --project examples/github-app/tsconfig.typetest.json

  esmodule-types-latest:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run Typecheck
          command: |
            yarn run tsc --project examples/todo-app/tsconfig.json
            yarn run tsc --project examples/github-app/tsconfig.json
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json
            yarn run tsc --project examples/github-app/tsconfig.typetest.json
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json
            yarn run tsc --project examples/todo-app/tsconfig.json --strictNullChecks false
            yarn run tsc --project examples/github-app/tsconfig.json --strictNullChecks false
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json --strictNullChecks false
            yarn run tsc --project examples/github-app/tsconfig.typetest.json --strictNullChecks false
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json --strictNullChecks false
            yarn run tsc --project examples/todo-app/tsconfig.typetest.json --exactOptionalPropertyTypes true
            yarn run tsc --project examples/github-app/tsconfig.typetest.json --exactOptionalPropertyTypes true
            yarn run tsc --project examples/todo-app/tsconfig.typetest41.json --exactOptionalPropertyTypes true

  validate-esmodule-browser-build:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn run ci:build:esmodule
      - run:
          command: |
            cd examples/todo-app
            npm run build:browser -- --env readable
      - run:
          command: |
            cd examples/normalizr-relationships
            yarn run start

workflows:
  version: 2
  all-tests:
    jobs:
      - setup
      - unit_tests:
          matrix:
            parameters:
              react-version: ["^17.0.0", "^18", "latest"]
          requires:
            - setup
      - node_matrix:
          matrix:
            parameters:
              node-version: ["14.21", "16.19", "18.18", "20.12.2"]
          requires:
            - setup
      - lint:
          requires:
            - setup
      - typecheck:
          requires:
            - setup
      - validate-esmodule-browser-build:
          requires:
            - setup
      - esmodule-types-latest:
          requires:
            - setup
      - setup-esmodule-types:
          requires:
            - setup
      - esmodule-types:
          matrix:
            parameters:
              # 3.7 is min version for 'full enforcement' (TODO: we need to do a test without rest lib for this to work)
              # 4.0 is min version for rest package working
              # 4.1 is min version for rest package working well
              # 4.3
              # 4.7 (but its broken so we do 4.8) lets you apply a generic type to a function type to see its return value
              typescript-version: ["4.0", "4.1", "4.3", "4.8", "5.3"]
          requires:
            - setup-esmodule-types
